name: Web App (CI/CD)

on:
  push: 
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Test
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
        pipenv run pytest
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ secrets.DOCKERHUB_USER }}/github-blog  
    - name: Push Docker image
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: |
        docker-compose build
        docker-compose up -d
        docker-compose push
        
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install SSH Pass
      run: sudo apt-get install -y sshpass

    - name: Copy files to the Droplet
      env:
        DROPLET_IP: 104.236.198.88
        DROPLET_USERNAME: root
        DROPLET_PASSWORD: ${{secrets.DROPLET_PASSWORD }}
        TOKEN: ${{ secrets.TOKEN }}
      run: |
        sshpass -p "${DROPLET_PASSWORD}" rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ "${DROPLET_USERNAME}@${DROPLET_IP}:/root"

    - name: Set Environment Variables on the Droplet
      env:
        DROPLET_IP: 104.236.198.88
        DROPLET_USERNAME: root
        DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
        TOKEN: ${{ secrets.TOKEN}}
      run: |
        sshpass -p "${DROPLET_PASSWORD}" ssh -o StrictHostKeyChecking=no "${DROPLET_USERNAME}@${DROPLET_IP}" "echo 'export TOKEN=${TOKEN}' >> ~/.bashrc"

    - name: Run Docker Compose on the Droplet
      env:
        DROPLET_IP: 104.236.198.88
        DROPLET_USERNAME: root
        DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
        TOKEN: ${{ secrets.TOKEN }}
      run: |
        sshpass -p "${DROPLET_PASSWORD}" ssh -o StrictHostKeyChecking=no "${DROPLET_USERNAME}@${DROPLET_IP}" "
          docker-compose down &&
          docker-compose build &&
          docker-compose up -d
        "
